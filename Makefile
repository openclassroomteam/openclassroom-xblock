.PHONY: dummy_translations extract_translations help


.DEFAULT_GOAL := help

help: ## display this help message
	@echo "Please use \`make <target>' where <target> is one of"
	@perl -nle'print $& if m{^[a-zA-Z_-]+:.*?## .*$$}' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m  %-25s\033[0m %s\n", $$1, $$2}'

clean: ## remove generated byte code, coverage reports, and build artifacts
	find . -name '__pycache__' -exec rm -rf {} +
	find . -name '*.pyc' -exec rm -f {} +
	find . -name '*.pyo' -exec rm -f {} +
	find . -name '*~' -exec rm -f {} +
	find . -name '*.pot' -exec rm -f {} +

	rm -f locale/en/LC_MESSAGES/*

	find openclassroom/translations -name djangojs.mo -exec rm -f {} +
	find openclassroom/translations -name djangojs.po -exec rm -f {} +
	find openclassroom/translations -name textjs.mo -exec rm -f {} +

	rm -fr build/
	rm -fr dist/
	rm -fr *.egg-info

requirements: ## install development environment requirements
	pip install -r requirements.txt --exists-action w
	pip install -r requirements-dev.txt --exists-action w

selfcheck: ## check that the Makefile is well-formed
	@echo "The Makefile is well-formed."

## Localization targets

extract_translations: clean ## extract strings to be translated, outputting .po files
	python manage.py makemessages -l en -d django
	python manage.py makemessages -l en -d djangojs -e js --ignore openclassroom/static/js/translations
	mv locale/en/LC_MESSAGES/django.po locale/en/LC_MESSAGES/text.po
	mv locale/en/LC_MESSAGES/djangojs.po locale/en/LC_MESSAGES/textjs.po

compile_translations: ## compile translation files, outputting .mo files for each supported language
	django-admin compilemessages
	python manage.py compilejsi18n
	make clean

detect_changed_source_translations: ## determines if the source translation files are up-to-date, otherwise exit with a non-zero code.
	i18n_tool changed

dummy_translations: ## generate dummy translation (.po) files
	i18n_tool dummy

build_dummy_translations: extract_translations dummy_translations compile_translations ## generate and compile dummy translation files

validate_translations: build_dummy_translations detect_changed_source_translations ## validate translations
